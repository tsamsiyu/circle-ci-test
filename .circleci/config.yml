version: 2
jobs:
  build:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build image
          command: docker-compose build
      - run:
          name: Save built image
          command: docker save -o ~/image.last.tar.gz echo
      - save_cache:
          key: docker-image-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/image.last.tar.gz
      - save_cache:
          key: app-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - docker-compose.yml
            - Dockerfile.deploy
  deploy:
    machine: true
    working_directory: ~/app
    steps:
      - restore_cache:
          key: docker-image-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: app-{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys:
          fingerprints:
            - "df:07:69:5c:76:3e:54:6a:54:bd:41:ae:a4:15:dd:39"
      - run:
          name: Deploy
          command: |
            scp ~/image.last.tar.gz $SSH_USERNAME@$SSH_HOST:/home/$SSH_USERNAME/echo.image.tar
            scp ./docker-compose.yml $SSH_USERNAME@$SSH_HOST:/home/$SSH_USERNAME/docker-compose.yml
            ssh $SSH_USERNAME@$SSH_HOST << EOF
              echo {{ .Environment.ECHO_PORT }}
              export ECHO_PORT=80
              docker load -i echo.image.tar
              docker-compose rm -f
              docker-compose up -d
            EOF
workflows:
  version: 2
  full:
    jobs:
      - build
      - deploy:
          requires:
            - build
