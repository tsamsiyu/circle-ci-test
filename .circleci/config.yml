version: 2
jobs:
  build:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build image
          command: docker-compose build
      - run:
          name: Save built image
          command: docker save -o ~/image.last.tar.gz echo
      - save_cache:
          key: docker-image-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/image.last.tar.gz
      - save_cache:
          key: app-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - docker-compose.yml
            - Dockerfile.deploy
  deploy:
    machine: true
    working_directory: ~/app
    steps:
      - restore_cache:
          key: docker-image-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: app-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run docker cloud client
          command: |
            docker pull dockercloud/client
            CONNECT_RESULT=$(docker run --rm -ti -v /var/run/docker.sock:/var/run/docker.sock -e DOCKER_HOST dockercloud/client -u $DOCKER_USER -p $DOCKER_PASS tsamsiyu/test)
            echo $CONNECT_RESULT
            HOST_REGEX="DOCKER_HOST=?(.+)"
            [[ $CONNECT_RESULT =~ $HOST_REGEX ]] && DOCKER_HOST=${BASH_REMATCH[1]}
            echo HOST=$DOCKER_HOST
            export DOCKER_HOST=${DOCKER_HOST}
      - run:
          name: Build deploy image
          command: docker build -t deploy -f Dockerfile.deploy .
      - run:
          name: Run deploy image
          command: docker run -e DOCKER_HOST=$DOCKER_HOST -v /var/run/docker.sock:/var/run/docker.sock -d -t --entrypoint /bin/sh --name deploy deploy
      - run:
          name: Login to docker hub
          command: docker exec deploy docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Deploy
          command: docker exec deploy docker stack deploy --compose-file docker-compose.yml --with-registry-auth test
workflows:
  version: 2
  full:
    jobs:
      - build
      - deploy:
          requires:
            - build
